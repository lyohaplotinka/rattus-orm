{
  "name": "RattusContext",
  "publicMethods": [
    {
      "name": "createDatabase",
      "typeParams": [],
      "params": [
        {
          "declaration": "connection = 'entities'",
          "name": "connection",
          "description": "- The connection string used to create the database."
        }
      ],
      "returnType": "Database",
      "description": "Creates and initializes a new database using the provided connection string and data provider. If no default database exists, the newly created database is set as the default. The newly created database is added to the database manager."
    },
    {
      "name": "getRepository",
      "typeParams": [
        "R extends Repository<InstanceType<M>>",
        "M extends typeof Model = typeof Model"
      ],
      "params": [
        {
          "declaration": "model: M",
          "name": "model",
          "description": "The model class for which the repository needs to be retrieved."
        },
        {
          "declaration": "connectionParam?: string",
          "name": "connectionParam",
          "description": "An optional parameter specifying the connection to use. If not provided, a default connection is used."
        }
      ],
      "returnType": "R",
      "description": "Retrieves a repository instance for the specified model and connection parameters. If a repository for the given model and connection is already cached, it returns the cached instance; otherwise, it creates a new one, caches it, and then returns it."
    },
    {
      "name": "getDatabaseManager",
      "typeParams": [],
      "params": [],
      "returnType": "DatabaseManager",
      "description": "Retrieves the instance of the DatabaseManager."
    },
    {
      "name": "getDatabase",
      "typeParams": [],
      "params": [
        {
          "declaration": "connectionParam?: string",
          "name": "connectionParam",
          "description": "- An optional parameter specifying the connection identifier to use. If not provided, the default connection will be used."
        }
      ],
      "returnType": "Database",
      "description": "Retrieves the Database instance associated with the provided connection parameter."
    }
  ],
  "publicProperties": []
}
